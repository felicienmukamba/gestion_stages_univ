# Generated by Django 5.2 on 2025-04-23 23:29

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "est_facultaire",
                    models.BooleanField(default=False, verbose_name="est facultaire"),
                ),
                (
                    "est_enseignant",
                    models.BooleanField(default=False, verbose_name="est enseignant"),
                ),
                (
                    "est_etudiant",
                    models.BooleanField(default=False, verbose_name="est etudiant"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "utilisateur",
                "verbose_name_plural": "utilisateurs",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=200, verbose_name="nom")),
                ("adresse", models.TextField(blank=True, verbose_name="adresse")),
                (
                    "personne_contact",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="personne contact"
                    ),
                ),
                (
                    "email_contact",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email contact"
                    ),
                ),
                (
                    "telephone_contact",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="téléphone contact"
                    ),
                ),
            ],
            options={
                "verbose_name": "entreprise",
                "verbose_name_plural": "entreprises",
            },
        ),
        migrations.CreateModel(
            name="Faculty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=100, verbose_name="nom")),
                (
                    "code",
                    models.CharField(
                        help_text="Code court unique pour la faculté (ex: ST, EG)",
                        max_length=10,
                        unique=True,
                        verbose_name="code",
                    ),
                ),
            ],
            options={
                "verbose_name": "faculté",
                "verbose_name_plural": "facultés",
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=100, verbose_name="nom")),
                (
                    "code",
                    models.CharField(
                        help_text="Code court unique pour le département (ex: INFO, GEST)",
                        max_length=10,
                        unique=True,
                        verbose_name="code",
                    ),
                ),
                (
                    "faculte",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="departements",
                        to="internships.faculty",
                        verbose_name="faculté",
                    ),
                ),
            ],
            options={
                "verbose_name": "département",
                "verbose_name_plural": "départements",
            },
        ),
        migrations.CreateModel(
            name="Promotion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nom",
                    models.CharField(
                        help_text="Nom de la promotion (ex: L1, L2, L3, M1, M2)",
                        max_length=50,
                        verbose_name="nom",
                    ),
                ),
                (
                    "annee_academique",
                    models.CharField(
                        help_text="Année académique (ex: 2024-2025)",
                        max_length=9,
                        verbose_name="année académique",
                    ),
                ),
                (
                    "departement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="promotions",
                        to="internships.department",
                        verbose_name="département",
                    ),
                ),
            ],
            options={
                "verbose_name": "promotion",
                "verbose_name_plural": "promotions",
                "unique_together": {("departement", "nom", "annee_academique")},
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="student",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="utilisateur",
                    ),
                ),
                (
                    "matricule",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="matricule"
                    ),
                ),
                (
                    "nom_complet",
                    models.CharField(max_length=200, verbose_name="nom complet"),
                ),
                (
                    "id_inscription_annee",
                    models.IntegerField(
                        help_text="ID unique d'inscription pour cette année académique et promotion",
                        verbose_name="ID Inscription Année",
                    ),
                ),
                (
                    "entreprise_proposee_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="proposee_par_etudiants_1",
                        to="internships.company",
                        verbose_name="1ère entreprise proposée",
                    ),
                ),
                (
                    "entreprise_proposee_2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="proposee_par_etudiants_2",
                        to="internships.company",
                        verbose_name="2ème entreprise proposée",
                    ),
                ),
                (
                    "promotion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="etudiants",
                        to="internships.promotion",
                        verbose_name="promotion",
                    ),
                ),
            ],
            options={
                "verbose_name": "étudiant",
                "verbose_name_plural": "étudiants",
                "unique_together": {("promotion", "id_inscription_annee")},
            },
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="teacher",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="utilisateur",
                    ),
                ),
                (
                    "matricule",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="matricule"
                    ),
                ),
                (
                    "nom_complet",
                    models.CharField(max_length=200, verbose_name="nom complet"),
                ),
                (
                    "departement",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="enseignants",
                        to="internships.department",
                        verbose_name="département",
                    ),
                ),
            ],
            options={
                "verbose_name": "enseignant",
                "verbose_name_plural": "enseignants",
            },
        ),
        migrations.CreateModel(
            name="Internship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("EN_ATTENTE_PROPOSITION", "En attente de proposition"),
                            ("PROPOSITION_SOUMISE", "Proposition Soumise"),
                            ("PROPOSITION_VALIDEE", "Proposition Validée"),
                            ("ENCADREUR_AFFECTE", "Encadreur Affecté"),
                            ("EN_COURS", "En Cours"),
                            ("TERMINE", "Terminé"),
                            ("ANNULE", "Annulé"),
                        ],
                        default="EN_ATTENTE_PROPOSITION",
                        max_length=30,
                        verbose_name="statut",
                    ),
                ),
                (
                    "note",
                    models.IntegerField(
                        blank=True,
                        help_text="Note sur 100",
                        null=True,
                        verbose_name="note",
                    ),
                ),
                (
                    "date_proposition_soumise",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="date proposition soumise"
                    ),
                ),
                (
                    "date_validation",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date de validation de l'entreprise",
                        null=True,
                        verbose_name="date validation",
                    ),
                ),
                (
                    "date_encadreur_affecte",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="date encadreur affecté"
                    ),
                ),
                (
                    "date_debut",
                    models.DateField(
                        blank=True, null=True, verbose_name="date début stage"
                    ),
                ),
                (
                    "date_fin",
                    models.DateField(
                        blank=True, null=True, verbose_name="date fin stage"
                    ),
                ),
                (
                    "date_notation",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="date notation"
                    ),
                ),
                (
                    "entreprise_selectionnee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="stages_attribues",
                        to="internships.company",
                        verbose_name="entreprise sélectionnée",
                    ),
                ),
                (
                    "etudiant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stage",
                        to="internships.student",
                        verbose_name="étudiant",
                    ),
                ),
                (
                    "encadreur",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="stages_encadres",
                        to="internships.teacher",
                        verbose_name="encadreur",
                    ),
                ),
            ],
            options={
                "verbose_name": "stage",
                "verbose_name_plural": "stages",
            },
        ),
    ]
